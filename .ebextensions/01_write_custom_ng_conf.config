files:
  "/tmp/custom_nginx.conf":
     mode: "000644"
     owner: root
     group: root
     content: |
       # your .conf file
       user                    nginx;
       error_log               /var/log/nginx/error.log warn;
       pid                     /var/run/nginx.pid;
       worker_processes        auto;
       worker_rlimit_nofile    33282;

      events {
        worker_connections  1024;
      }

      http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       include       conf.d/*.conf;
 
       map $http_upgrade $connection_upgrade {
         default     "upgrade";
      }

      server {
      listen        80 default_server;
      root /var/app/current/public;
      location /api {
          if ($request_method = 'OPTIONS') {
                         add_header 'Access-Control-Allow-Origin' '*';
                         add_header 'Access-Control-Allow-Methods' 'GET, PUT,POST, OPTIONS,PATCH, DELETE';
                        #
                        # Custom headers and headers various browsers should be OK with but aren't
                        #
                         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range';
                        #
                        # Tell client that this pre-flight info is valid for 20 days
                        #
                         add_header 'Access-Control-Max-Age' 1728000;
                         add_header 'Content-Type' 'text/plain; charset=utf-8';
                         add_header 'Content-Length' 0;
                         return 204;
                     }
                     if ($request_method = 'POST') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT, OPTIONS,PATCH,DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                     }
                     if ($request_method = 'GET') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT, OPTIONS,PATCH,DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                     }
                     if ($request_method = 'DELETE') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT, OPTIONS,PATCH,DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                     }
                     if ($request_method = 'PUT') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT, OPTIONS,PATCH,DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                     }
                     if ($request_method = 'PATCH') {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT, OPTIONS,PATCH,DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Range' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                     }

                           proxy_pass http://127.0.0.1:8080;
                           proxy_http_version 1.1;
                           proxy_set_header Upgrade $http_upgrade;
                           proxy_set_header Connection 'upgrade';
                           proxy_set_header Host $host;
                           proxy_cache_bypass $http_upgrade;
               }
          
      }

      access_log    /var/log/nginx/access.log main;

      client_header_timeout 60;
      client_body_timeout   60;
      keepalive_timeout     60;
      gzip                  off;
      gzip_comp_level       4;

      # Include the Elastic Beanstalk generated locations
    
      include conf.d/elasticbeanstalk/healthd.conf;
  }
}
